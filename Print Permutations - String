
void func(string &s,vector<string>&ans,string &ds,int freq[])
{
    if(ds.size()==s.size())
    {
        ans.push_back(ds);  //hence one string is find & put it into our answer vector
        return;
    }
    for(int i =0;i<s.size();i++)
    {
        if(!freq[i]) 
        {
            ds.push_back(s[i]); //put uncheck element in our ds
            freq[i]=1;  // and mark it as check 
           func(s,ans,ds,freq); //call for it downwards element while keep it check so again we can not take it
            freq[i]=0; //back track remove the element from ds and maark it uncheck for the next iteratiuon i+1
            ds.pop_back();
            
        }
    }
}

vector<string> findPermutations(string &s) {
    // Write your code here.
    vector<string> ans;
    string ds ="";
    int freq[s.size()];//create freq map 
    for(int i =0;i<s.size();i++) //fill this map with 0 -as sign of uncheck
    {
        freq[i]=0;
    }
    func(s,ans,ds,freq);
    return ans;
}
