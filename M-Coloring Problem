bool isPossible(int idx,vector<int>colr,vector<vector<int>> &mat,int n ,int color)
{
    for(int i =0;i<n;i++)
    {
        if(i != idx && mat[i][idx]==1 && colr[i]==color) return false;
        
    } return true;
}
bool solve(int idx,vector<int>colr,vector<vector<int>> &mat,int n ,int m)
{
    if(idx==n)
    {
        return true;
    }
         
    for(int i = 1;i<=m;i++)
    {
        if(isPossible(idx,colr,mat,n,i))
        {
            colr[idx]=i;
            if(solve(idx+1,colr,mat,n,m)) return true;
            colr[idx]=0;
        }
    } return false;
}
string graphColoring(vector<vector<int>> &mat, int m) {
    // Write your code here
    int n = mat.size();
    vector<int>colr(n,0);
    if(solve(0,colr,mat,n,m))
    {
        return "YES";
    }
    return "NO";
    
}
