bool isValid(int matrix[9][9],int row ,int col,int k)
{  int  n =9;
    for(int i =0;i<n;i++)
    {
        if(matrix[i][col]==k)
            return false;
        if(matrix[row][i]==k) return false;
        
        if(matrix[3 * (row/3) +i/3] [3*(col/3)+ i%3]==k) return false;
        
        
    }return true;
}

bool solve(int matrix[9][9])
{   int  n =9;
    for(int i =0;i<n;i++)
    {
        for(int j =0;j<n;j++)
        {     //traverse given matrix and find empty(0) space//
            if(matrix[i][j]== 0) //if 0 find
            {
                for(int k = 1; k<=9;k++) //try to filled it with number 0 to 9 one by one by passing in isValid function if isValid function return true for given number then we put that number in empty space otherwise shift to next number
                {
                    if(isValid(matrix,i,j,k))
                       {
                           matrix[i][j]=k; //fll the empty space with valid number
                       if(solve(matrix)==true) 
                           return true; 
                        else
                            matrix[i][j]= 0; //if solve function gives false we backtrack
                       }     
                }
                return false; //if 1 to 9 number is not valid return false
            }
            
        }
    }return true; // else return true
    
}
bool isItSudoku(int matrix[9][9]) {
    // Write your code here.
    solve(matrix);
    
}
